{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./api-configuration\";\nimport * as i2 from \"@angular/common/http\";\n/**\r\n * Base class for services\r\n */\nexport class BaseService {\n  constructor(config, http) {\n    this.config = config;\n    this.http = http;\n    this._rootUrl = '';\n  }\n  /**\r\n   * Returns the root url for all operations in this service. If not set directly in this\r\n   * service, will fallback to `ApiConfiguration.rootUrl`.\r\n   */\n  get rootUrl() {\n    return this._rootUrl || this.config.rootUrl;\n  }\n  /**\r\n   * Sets the root URL for API operations in this service.\r\n   */\n  set rootUrl(rootUrl) {\n    this._rootUrl = rootUrl;\n  }\n}\nBaseService.ɵfac = function BaseService_Factory(t) {\n  return new (t || BaseService)(i0.ɵɵinject(i1.ApiConfiguration), i0.ɵɵinject(i2.HttpClient));\n};\nBaseService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BaseService,\n  factory: BaseService.ɵfac\n});","map":{"version":3,"mappings":";;;AAMA;;;AAIA,OAAM,MAAOA,WAAW;EACtBC,YACYC,MAAwB,EACxBC,IAAgB;IADhB,WAAM,GAAND,MAAM;IACN,SAAI,GAAJC,IAAI;IAIR,aAAQ,GAAW,EAAE;EAF7B;EAIA;;;;EAIA,IAAIC,OAAO;IACT,OAAO,IAAI,CAACC,QAAQ,IAAI,IAAI,CAACH,MAAM,CAACE,OAAO;EAC7C;EAEA;;;EAGA,IAAIA,OAAO,CAACA,OAAe;IACzB,IAAI,CAACC,QAAQ,GAAGD,OAAO;EACzB;;AAtBWJ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAM,SAAXN,WAAW;AAAA","names":["BaseService","constructor","config","http","rootUrl","_rootUrl","factory"],"sourceRoot":"","sources":["D:\\Contents\\Practice\\Flights\\ClientApp\\src\\app\\api\\base-service.ts"],"sourcesContent":["/* tslint:disable */\r\n/* eslint-disable */\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApiConfiguration } from './api-configuration';\r\n\r\n/**\r\n * Base class for services\r\n */\r\n@Injectable()\r\nexport class BaseService {\r\n  constructor(\r\n    protected config: ApiConfiguration,\r\n    protected http: HttpClient\r\n  ) {\r\n  }\r\n\r\n  private _rootUrl: string = '';\r\n\r\n  /**\r\n   * Returns the root url for all operations in this service. If not set directly in this\r\n   * service, will fallback to `ApiConfiguration.rootUrl`.\r\n   */\r\n  get rootUrl(): string {\r\n    return this._rootUrl || this.config.rootUrl;\r\n  }\r\n\r\n  /**\r\n   * Sets the root URL for API operations in this service.\r\n   */\r\n  set rootUrl(rootUrl: string) {\r\n    this._rootUrl = rootUrl;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}